" ~/.vimrc

" Use vim settings, rather than vi settings
" This must be first, because it changes other options as a side effect
set nocompatible

" Change the mapleader from \ to ,
let mapleader=","

set ruler                       " show line and column number of the cursor position
set scrolloff=4                 " keep 4 lines off the edges of the screen when scrolling
set showtabline=2               " show tab page labels (0 = never, 1 = when more than 1, 2 = always)
"set laststatus=2                " tell vim to always put a status line in, even if there is only one window
set cmdheight=1                 " use a statusbar that is 2 rows high (nevermind, set it back to 1)

set showcmd                     " show partial command in the last line of the screen
set showmode                    " always show what mode we're currently editing in
set showmatch                   " show matching parenthesis

set tabstop=4                   " a tab is four spaces
set softtabstop=4               " when hitting <BS>, pretend like a tab is removed, even if spaces
set expandtab                   " expand tabs by default (overloadable per file type later)
set shiftwidth=4                " number of spaces to use for autoindenting
set shiftround                  " use multiple of shiftwidth when indenting with '<' and '>'
set smarttab                    " insert tabs on the start of a line according to shiftwidth, not tabstop
set autoindent                  " always set autoindenting on
set copyindent                  " copy the previous indentation on autoindenting

set gdefault                    " search/replace "globally" (on a line) by default
set hlsearch                    " highlight search terms"
set incsearch                   " show search matches as you type
"set ignorecase                  " ignore case when searching
set smartcase                   " ignore case if search pattern is all lowercase (case-sensitive otherwise)

set termencoding=utf-8          " character encoding used for the terminal
set encoding=utf-8              " character encoding used inside vim
set lazyredraw                  " don't update the display while executing macros
set ttyfast                     " declare we are using a fast terminal (disable if terminal is slow)

" allow the cursor to go to "invalid" places
"set virtualedit=all

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" specifies what end-of-line formats will be tried when editing a new buffer
set fileformats="unix,dos,mac"

" don't show invisible characters by default, but it is enabled for some
" filetypes (see later)
set nolist

" strings to use in 'list' mode for the :list command
set listchars=tab:▸\ ,trail:·,extends:#,nbsp:·

" hide buffers instead of closing them. this means that the current buffer can
" be put to background withohut being written; and that marks and undo history
" are preserved
set hidden

" reveal already opened files from the quickfix window instead
" of opening new buffers
set switchbuf=useopen

" remember more commands and search history
set history=1000
set undolevels=1000

" read/write a .viminfo file, don't store more than 80 lines of registers
set viminfo='20,\"80

" We typically don't want to use the current working directory as a backupdir.
" Fortunately, we can set it explicitly. See the following Vim FAQ entry:
" http://vimdoc.sourceforge.net/cgi-bin/vimfaq2html3.pl#7.2
" See also: http://news.ycombinator.com/item?id=1688068
set backupdir=~/.vim/tmp/backup//,~/tmp//,/tmp//
set directory=~/.vim/tmp/swp//,~/tmp//,/tmp//

" keep the undo history for our buffers
if v:version >= 703
    set undofile
    set undodir=~/.vim/tmp/undo//,~/tmp//,/tmp//
endif

" make tab completion for files/buffers act like bash
set wildmenu

" show a list when pressing tab, and complete first full match
set wildmode=list:full

" ignore completion for these files
set wildignore=*.swp,*.bak,*.pyc,*.class

" change the terminal's title
set title

" don't beep
set visualbell
set noerrorbells

" modeline settings
set modeline
set modelines=5

" when changing a line, don't redisplay, but put a '$' at the end during the change
set cpoptions+=$

" don't start new lines w/ comment leader on pressing 'o'
set formatoptions-=o

" somehow, during vim filetype detection, this gets set for vim files,
" so explicitly unset it again
au filetype vim set formatoptions-=o

" -----------------------------------------------------------------------------

set foldenable                  " enable folding
"set foldcolumn=2                " add a fold column
set foldmethod=marker           " dettect triple-{ style fold markers
set foldlevelstart=0            " start out with everything folded

" which commands trigger auto-unfold
set foldopen=block,hor,insert,jump,mark,percent,quickfix,search,tag,undo

" customize the text displayed for a closed fold
set foldtext=MyFoldText()
function! MyFoldText()
    let line = getline(v:foldstart)

    let nucolwidth = &fdc + &number * &numberwidth
    let windowwidth = winwidth(0) - nucolwidth - 3
    let foldedlinecount = v:foldend - v:foldstart

    " expand tabs into spaces
    let onetab = strpart('          ', 0, &tabstop)
    let line = substitute(line, '\t', onetab, 'g')

    let line = strpart(line, 0, windowwidth - 2 -len(foldedlinecount))
    let fillcharcount = windowwidth - len(line) - len(foldedlinecount) - 4
    return line . ' …' . repeat(" ",fillcharcount) . foldedlinecount . ' '
endfunction

" -----------------------------------------------------------------------------

" switch syntax highlighting on, when the terminal has colors
if &t_Co > 2 || has("gui_running")
    syntax on
endif

" restore cursor position upon reopening files
autocmd BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif

" enable the use of the mouse if terminal emulator supports it (xterm does)
set mouse=a

" when in normal mode, press <F12> to toggle mouse usage
nnoremap <F12> :call ToggleMouse()<CR>
function! ToggleMouse()
  if &mouse == 'a'
    set mouse=
    echo "Mouse usage disabled"
  else
    set mouse=a
    echo "Mouse usage enabled"
  endif
endfunction

" when in insert mode, press <F2> to go to paste mode, where you can
" paste mass data that won't be autoindented
set pastetoggle=<F2>

" -----------------------------------------------------------------------------

" don't wrap lines
"set nowrap

" remap j and k to act as expected when used on long, wrapped lines
nnoremap j gj
nnoremap k gk

" -----------------------------------------------------------------------------
"set smartindent                 " smart autoindenting when starting a new line
"set number                      " always show line numbers
"set background=dark             " try to use colors that look good on a dark background
