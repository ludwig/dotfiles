# ~/.inputrc - See READLINE section in bash(1)
#
# To display the current readline variable names and values:
#
#   $ bind -v
#
# To display the current readline function names and bindings:
#
#   $ bind -p
#
# Useful URLs:
#
#   http://linuxart.com/log/archives/2005/10/13/super-useful-inputrc/
#
# -----------------------------------------------------------------------------
# Readline Settings {{{

# Use a visible bell if available.
set bell-style visible

# Perform filename matching and completion in a case-insensitive fashion.
set completion-ignore-case on

# If set to On, convert characters with the eighth bit set to an ASCII key sequence
# by stripping the eighth bit and prefixing an escape character.
set convert-meta off

# Initialize readline using key-bindings similar to vi (or emacs).
#set editing-mode vi

# If set to On, tilde expansion is performed when readline attempts word completion.
set expand-tilde off

# If set to On, readline will enable eight-bit input (that is, it will not strip the
# high bit from the characters it reads), regardless of what the terminal claims it
# can support. The name 'meta-flag' is a synonym for this variable.
set input-meta on

# If set to On, readline will display characters with the eighth bit set directly
# rather than as a meta-prefixed escape sequence.
set output-meta on

# This  alters the default behavior of the completion functions.  If set to on, words
# which have more than one possible completion cause the matches to be listed immediately
# instead of ringing the bell.
set show-all-if-ambiguous on

# If set to On, a character denoting a file's type as reported by stat(2) is appended
# to the filename when listing possible completions.
set visible-stats on

# }}}
# Commands for Moving {{{
#
#   beginning-of-line (C-a)
#     Move to the start of the current line.
#
#   end-of-line (C-e)
#     Move to the end of the line.
#
#   forward-char (C-f)
#     Move forward a character.
#
#   backward-char (C-b)
#     Move back a character.
#
#   forward-word (M-f)
#     Move forward to the end of the next word.  Words are composed of
#     alphanumeric characters (letters and digits).
#
#   backward-word (M-b)
#     Move back to the start of the current or previous word.  Words are
#     composed of alphanumeric characters (letters and digits).
#

"\e[1~": beginning-of-line
"\e[4~": end-of-line

#"\e[C": forward-char
#"\e[D": backward-char

"\e[1;5C": forward-word
"\e[1;5D": backward-word

"\e[5C": forward-word
"\e[5D": backward-word

"\e\e[C": forward-word
"\e\e[D": backward-word

# }}}
# Commands for Manipulating the History {{{
#
#   beginning-of-history (M-<)
#     Move to the first line in the history.
#
#   end-of-history (M->)
#     Move to the end of the input history, i.e., the line currently being entered.
#
#   history-search-forward
#     Search forward through the history for the string of characters between the
#     start of the current line and the point.  This is a non-incremental search.
#
#   history-search-backward
#     Search backward through the history for the string of characters between the
#     start of the current line and the point.  This is a non-incremental search.
#

"\e[5~": beginning-of-history
"\e[6~": end-of-history

"\e[A": history-search-backward
"\e[B": history-search-forward

#"\e\e[A": history-search-backward
#"\e\e[B": history-search-forward

# }}}
# Commands for Changing Text {{{
#
#   delete-char (C-d)
#     Delete the character at point.  If point is at the beginning of
#     the line, there are no characters in the line, and the last character
#     typed was not bound to delete-char, then return EOF.
#
#   quoted-insert (C-q, C-v)
#     Add the next character typed to the line verbatim.  This is how
#     to insert characters like C-q, for example.
#
#   tab-insert (C-v TAB)
#     Insert a tab character.
#

"\e[3~": delete-char
"\e[2~": quoted-insert

# }}}
# -----------------------------------------------------------------------------
# vim: fen fdm=marker fdl=0
