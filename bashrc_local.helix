# ~/.bashrc_local
# vim: ft=bash

# Set up powerline-shell prompt
# See https://github.com/b-ryan/powerline-shell
function _update_ps1() {
    export PS1=$(powerline-shell $?)
}
if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
fi

# Helix-specific aliases
alias code=code-insiders
alias vlc='/Applications/VLC.app/Contents/MacOS/VLC'
alias today='mkcd ~/active/$(gdate +%Y/%m-%d)/'
alias caf='conda activate fastapi'

# Helix-specific directories
alias cd-wikipedia='cd ~/active/links/wikipedia/'
alias cd-awesome-links='cd ~/w/awesome-links/'
alias cd-desktop='cd ~/Desktop/active-workspace/'
alias cd-finetuning='cd ~/genai/tts-finetuning/'
alias cd-stb='cd ~/active/stb'
alias cd-zoo='cd ~/active/zoo'
alias cd-seeds='cd ~/active/seeds'
alias cd-chats='cd ~/active/chats'
alias cd-hub='cd ~/active/poc/hub'
alias cd-webstream='cd ~/active/webstream/'
alias cd-upwork='cd ~/active/upwork/'
alias cd-books='cd ~/active/books/'
alias cd-yum='cd ~/active/yum/'

# AWS stuff
alias ave='aws-vault exec'
alias tf='terraform'
alias tg='terragrunt'
alias sandbox-sso-login='aws sso login --profile sandbox-admin'
alias sandbox-caller-identity='aws sts get-caller-identity --profile sandbox-admin'

# Hugo stuff
alias cd-blog='cd ~/blogs/hugo'
alias cd-themes='cd ~/themes/hugo'
alias cd-videolog='cd ~/blogs/hugo/sites/videolog'
alias cd-blog-webstream='cd ~/blogs/hugo/vault/webstream'
alias cd-watchq='cd ~/blogs/hugo/vault/watchq'
source ~/blogs/profile.sh

# Set up z jumper
source "/opt/homebrew/etc/profile.d/z.sh"

# Setup nvm
export NVM_DIR="${HOME}/.nvm"
if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
    source "/opt/homebrew/opt/nvm/nvm.sh"
fi
if [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ]; then
    source "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
fi

# Setup java
export PATH="/opt/homebrew/opt/openjdk/bin:${PATH}"

# Setup modules
[ -d /opt/homebrew/opt/modules/init ] && source /opt/homebrew/opt/modules/init/bash
export MODULEPATH="${HOME}/modulefiles:${MODULEPATH}"

# STB: Load poc bash scripts
source ~/active/poc/bashes/profile.sh

# STB: AWS stuff
source ~/security/aws/profile.sh

# STB: Location of PKI for the helix private CA
export EASYRSA_PKI="${HOME}/security/easy-rsa/pki"

# Setup mojo
if [ -d ~/.modular ]; then
    #
    export MODULAR_HOME="${HOME}/.modular"
    export PATH="${MODULAR_HOME}/pkg/packages.modular.com_mojo/bin:${PATH}"
    # https://docs.modular.com/mojo/manual/python/#python-environment
    #export MOJO_PYTHON_LIBRARY="$(find $CONDA_PREFIX/lib -iname 'libpython*.[s,d]*' | sort -r | head -n 1)"
    #export MOJO_PYTHON_LIBRARY=/Users/luis/miniforge3/envs/lam/lib/libpython3.11.dylib
    # https://www.modular.com/blog/using-mojo-with-python
    # Hmmm...it's better to edit the line `python_lib =` inside `~/.modular/modular.cfg`
fi

# https://support.apple.com/kb/HT208050
export BASH_SILENCE_DEPRECATION_WARNING=1

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/Users/luis/miniforge3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/Users/luis/miniforge3/etc/profile.d/conda.sh" ]; then
        . "/Users/luis/miniforge3/etc/profile.d/conda.sh"
    else
        export PATH="/Users/luis/miniforge3/bin:$PATH"
    fi
fi
unset __conda_setup

if [ -f "/Users/luis/miniforge3/etc/profile.d/mamba.sh" ]; then
    . "/Users/luis/miniforge3/etc/profile.d/mamba.sh"
fi
# <<< conda initialize <<<
